/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FileScanTask } from './FileScanTask';
import {
    FileScanTaskFromJSON,
    FileScanTaskFromJSONTyped,
    FileScanTaskToJSON,
    FileScanTaskToJSONTyped,
} from './FileScanTask';
import type { DeleteFile } from './DeleteFile';
import {
    DeleteFileFromJSON,
    DeleteFileFromJSONTyped,
    DeleteFileToJSON,
    DeleteFileToJSONTyped,
} from './DeleteFile';

/**
 * Scan and planning tasks for server-side scan planning
 * 
 * - `plan-tasks` contains opaque units of planning work
 * - `file-scan-tasks` contains a partial or complete list of table scan tasks
 * - `delete-files` contains delete files referenced by file scan tasks
 * 
 * Each plan task must be passed to the fetchScanTasks endpoint to fetch the file scan tasks for the plan task.
 * 
 * The list of delete files must contain all delete files referenced by the file scan tasks.
 * 
 * @export
 * @interface ScanTasks
 */
export interface ScanTasks {
    /**
     * Delete files referenced by file scan tasks
     * @type {Array<DeleteFile>}
     * @memberof ScanTasks
     */
    deleteFiles?: Array<DeleteFile>;
    /**
     * 
     * @type {Array<FileScanTask>}
     * @memberof ScanTasks
     */
    fileScanTasks?: Array<FileScanTask>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ScanTasks
     */
    planTasks?: Array<string>;
}

/**
 * Check if a given object implements the ScanTasks interface.
 */
export function instanceOfScanTasks(value: object): value is ScanTasks {
    return true;
}

export function ScanTasksFromJSON(json: any): ScanTasks {
    return ScanTasksFromJSONTyped(json, false);
}

export function ScanTasksFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScanTasks {
    if (json == null) {
        return json;
    }
    return {
        
        'deleteFiles': json['delete-files'] == null ? undefined : ((json['delete-files'] as Array<any>).map(DeleteFileFromJSON)),
        'fileScanTasks': json['file-scan-tasks'] == null ? undefined : ((json['file-scan-tasks'] as Array<any>).map(FileScanTaskFromJSON)),
        'planTasks': json['plan-tasks'] == null ? undefined : json['plan-tasks'],
    };
}

export function ScanTasksToJSON(json: any): ScanTasks {
    return ScanTasksToJSONTyped(json, false);
}

export function ScanTasksToJSONTyped(value?: ScanTasks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'delete-files': value['deleteFiles'] == null ? undefined : ((value['deleteFiles'] as Array<any>).map(DeleteFileToJSON)),
        'file-scan-tasks': value['fileScanTasks'] == null ? undefined : ((value['fileScanTasks'] as Array<any>).map(FileScanTaskToJSON)),
        'plan-tasks': value['planTasks'],
    };
}

