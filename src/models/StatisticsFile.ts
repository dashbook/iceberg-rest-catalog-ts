/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BlobMetadata } from './BlobMetadata';
import {
    BlobMetadataFromJSON,
    BlobMetadataFromJSONTyped,
    BlobMetadataToJSON,
    BlobMetadataToJSONTyped,
} from './BlobMetadata';

/**
 * 
 * @export
 * @interface StatisticsFile
 */
export interface StatisticsFile {
    /**
     * 
     * @type {number}
     * @memberof StatisticsFile
     */
    snapshotId: number;
    /**
     * 
     * @type {string}
     * @memberof StatisticsFile
     */
    statisticsPath: string;
    /**
     * 
     * @type {number}
     * @memberof StatisticsFile
     */
    fileSizeInBytes: number;
    /**
     * 
     * @type {number}
     * @memberof StatisticsFile
     */
    fileFooterSizeInBytes: number;
    /**
     * 
     * @type {Array<BlobMetadata>}
     * @memberof StatisticsFile
     */
    blobMetadata: Array<BlobMetadata>;
}

/**
 * Check if a given object implements the StatisticsFile interface.
 */
export function instanceOfStatisticsFile(value: object): value is StatisticsFile {
    if (!('snapshotId' in value) || value['snapshotId'] === undefined) return false;
    if (!('statisticsPath' in value) || value['statisticsPath'] === undefined) return false;
    if (!('fileSizeInBytes' in value) || value['fileSizeInBytes'] === undefined) return false;
    if (!('fileFooterSizeInBytes' in value) || value['fileFooterSizeInBytes'] === undefined) return false;
    if (!('blobMetadata' in value) || value['blobMetadata'] === undefined) return false;
    return true;
}

export function StatisticsFileFromJSON(json: any): StatisticsFile {
    return StatisticsFileFromJSONTyped(json, false);
}

export function StatisticsFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatisticsFile {
    if (json == null) {
        return json;
    }
    return {
        
        'snapshotId': json['snapshot-id'],
        'statisticsPath': json['statistics-path'],
        'fileSizeInBytes': json['file-size-in-bytes'],
        'fileFooterSizeInBytes': json['file-footer-size-in-bytes'],
        'blobMetadata': ((json['blob-metadata'] as Array<any>).map(BlobMetadataFromJSON)),
    };
}

export function StatisticsFileToJSON(json: any): StatisticsFile {
    return StatisticsFileToJSONTyped(json, false);
}

export function StatisticsFileToJSONTyped(value?: StatisticsFile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'snapshot-id': value['snapshotId'],
        'statistics-path': value['statisticsPath'],
        'file-size-in-bytes': value['fileSizeInBytes'],
        'file-footer-size-in-bytes': value['fileFooterSizeInBytes'],
        'blob-metadata': ((value['blobMetadata'] as Array<any>).map(BlobMetadataToJSON)),
    };
}

