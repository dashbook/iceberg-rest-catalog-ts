/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Token type identifier, from RFC 8693 Section 3
 * 
 * See https://datatracker.ietf.org/doc/html/rfc8693#section-3
 * @export
 */
export const TokenType = {
    UrnIetfParamsOauthTokenTypeAccessToken: 'urn:ietf:params:oauth:token-type:access_token',
    UrnIetfParamsOauthTokenTypeRefreshToken: 'urn:ietf:params:oauth:token-type:refresh_token',
    UrnIetfParamsOauthTokenTypeIdToken: 'urn:ietf:params:oauth:token-type:id_token',
    UrnIetfParamsOauthTokenTypeSaml1: 'urn:ietf:params:oauth:token-type:saml1',
    UrnIetfParamsOauthTokenTypeSaml2: 'urn:ietf:params:oauth:token-type:saml2',
    UrnIetfParamsOauthTokenTypeJwt: 'urn:ietf:params:oauth:token-type:jwt'
} as const;
export type TokenType = typeof TokenType[keyof typeof TokenType];


export function instanceOfTokenType(value: any): boolean {
    for (const key in TokenType) {
        if (Object.prototype.hasOwnProperty.call(TokenType, key)) {
            if (TokenType[key as keyof typeof TokenType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function TokenTypeFromJSON(json: any): TokenType {
    return TokenTypeFromJSONTyped(json, false);
}

export function TokenTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenType {
    return json as TokenType;
}

export function TokenTypeToJSON(value?: TokenType | null): any {
    return value as any;
}

export function TokenTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): TokenType {
    return value as TokenType;
}

