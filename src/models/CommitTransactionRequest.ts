/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CommitTableRequest } from './CommitTableRequest';
import {
    CommitTableRequestFromJSON,
    CommitTableRequestFromJSONTyped,
    CommitTableRequestToJSON,
    CommitTableRequestToJSONTyped,
} from './CommitTableRequest';

/**
 * 
 * @export
 * @interface CommitTransactionRequest
 */
export interface CommitTransactionRequest {
    /**
     * 
     * @type {Array<CommitTableRequest>}
     * @memberof CommitTransactionRequest
     */
    tableChanges: Array<CommitTableRequest>;
}

/**
 * Check if a given object implements the CommitTransactionRequest interface.
 */
export function instanceOfCommitTransactionRequest(value: object): value is CommitTransactionRequest {
    if (!('tableChanges' in value) || value['tableChanges'] === undefined) return false;
    return true;
}

export function CommitTransactionRequestFromJSON(json: any): CommitTransactionRequest {
    return CommitTransactionRequestFromJSONTyped(json, false);
}

export function CommitTransactionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommitTransactionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'tableChanges': ((json['table-changes'] as Array<any>).map(CommitTableRequestFromJSON)),
    };
}

export function CommitTransactionRequestToJSON(json: any): CommitTransactionRequest {
    return CommitTransactionRequestToJSONTyped(json, false);
}

export function CommitTransactionRequestToJSONTyped(value?: CommitTransactionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'table-changes': ((value['tableChanges'] as Array<any>).map(CommitTableRequestToJSON)),
    };
}

