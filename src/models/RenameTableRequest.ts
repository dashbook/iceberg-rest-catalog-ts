/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TableIdentifier } from './TableIdentifier';
import {
    TableIdentifierFromJSON,
    TableIdentifierFromJSONTyped,
    TableIdentifierToJSON,
    TableIdentifierToJSONTyped,
} from './TableIdentifier';

/**
 * 
 * @export
 * @interface RenameTableRequest
 */
export interface RenameTableRequest {
    /**
     * 
     * @type {TableIdentifier}
     * @memberof RenameTableRequest
     */
    source: TableIdentifier;
    /**
     * 
     * @type {TableIdentifier}
     * @memberof RenameTableRequest
     */
    destination: TableIdentifier;
}

/**
 * Check if a given object implements the RenameTableRequest interface.
 */
export function instanceOfRenameTableRequest(value: object): value is RenameTableRequest {
    if (!('source' in value) || value['source'] === undefined) return false;
    if (!('destination' in value) || value['destination'] === undefined) return false;
    return true;
}

export function RenameTableRequestFromJSON(json: any): RenameTableRequest {
    return RenameTableRequestFromJSONTyped(json, false);
}

export function RenameTableRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RenameTableRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'source': TableIdentifierFromJSON(json['source']),
        'destination': TableIdentifierFromJSON(json['destination']),
    };
}

export function RenameTableRequestToJSON(json: any): RenameTableRequest {
    return RenameTableRequestToJSONTyped(json, false);
}

export function RenameTableRequestToJSONTyped(value?: RenameTableRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'source': TableIdentifierToJSON(value['source']),
        'destination': TableIdentifierToJSON(value['destination']),
    };
}

