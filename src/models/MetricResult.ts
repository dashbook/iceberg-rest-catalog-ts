/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CounterResult } from './CounterResult';
import {
    CounterResultFromJSON,
    CounterResultFromJSONTyped,
    CounterResultToJSON,
    CounterResultToJSONTyped,
} from './CounterResult';
import type { TimerResult } from './TimerResult';
import {
    TimerResultFromJSON,
    TimerResultFromJSONTyped,
    TimerResultToJSON,
    TimerResultToJSONTyped,
} from './TimerResult';

/**
 * 
 * @export
 * @interface MetricResult
 */
export interface MetricResult {
    /**
     * 
     * @type {string}
     * @memberof MetricResult
     */
    unit: string;
    /**
     * 
     * @type {number}
     * @memberof MetricResult
     */
    value: number;
    /**
     * 
     * @type {string}
     * @memberof MetricResult
     */
    timeUnit: string;
    /**
     * 
     * @type {number}
     * @memberof MetricResult
     */
    count: number;
    /**
     * 
     * @type {number}
     * @memberof MetricResult
     */
    totalDuration: number;
}

/**
 * Check if a given object implements the MetricResult interface.
 */
export function instanceOfMetricResult(value: object): value is MetricResult {
    if (!('unit' in value) || value['unit'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('timeUnit' in value) || value['timeUnit'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('totalDuration' in value) || value['totalDuration'] === undefined) return false;
    return true;
}

export function MetricResultFromJSON(json: any): MetricResult {
    return MetricResultFromJSONTyped(json, false);
}

export function MetricResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetricResult {
    if (json == null) {
        return json;
    }
    return {
        
        'unit': json['unit'],
        'value': json['value'],
        'timeUnit': json['time-unit'],
        'count': json['count'],
        'totalDuration': json['total-duration'],
    };
}

export function MetricResultToJSON(json: any): MetricResult {
    return MetricResultToJSONTyped(json, false);
}

export function MetricResultToJSONTyped(value?: MetricResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'unit': value['unit'],
        'value': value['value'],
        'time-unit': value['timeUnit'],
        'count': value['count'],
        'total-duration': value['totalDuration'],
    };
}

