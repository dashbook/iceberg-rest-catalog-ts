/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The view UUID must match the requirement's `uuid`
 * @export
 * @interface AssertViewUUID
 */
export interface AssertViewUUID {
    /**
     * 
     * @type {string}
     * @memberof AssertViewUUID
     */
    type: AssertViewUUIDTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof AssertViewUUID
     */
    uuid: string;
}


/**
 * @export
 */
export const AssertViewUUIDTypeEnum = {
    AssertViewUuid: 'assert-view-uuid'
} as const;
export type AssertViewUUIDTypeEnum = typeof AssertViewUUIDTypeEnum[keyof typeof AssertViewUUIDTypeEnum];


/**
 * Check if a given object implements the AssertViewUUID interface.
 */
export function instanceOfAssertViewUUID(value: object): value is AssertViewUUID {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('uuid' in value) || value['uuid'] === undefined) return false;
    return true;
}

export function AssertViewUUIDFromJSON(json: any): AssertViewUUID {
    return AssertViewUUIDFromJSONTyped(json, false);
}

export function AssertViewUUIDFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssertViewUUID {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'uuid': json['uuid'],
    };
}

export function AssertViewUUIDToJSON(json: any): AssertViewUUID {
    return AssertViewUUIDToJSONTyped(json, false);
}

export function AssertViewUUIDToJSONTyped(value?: AssertViewUUID | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'uuid': value['uuid'],
    };
}

