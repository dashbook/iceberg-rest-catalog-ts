/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ErrorModel } from './ErrorModel';
import {
    ErrorModelFromJSON,
    ErrorModelFromJSONTyped,
    ErrorModelToJSON,
    ErrorModelToJSONTyped,
} from './ErrorModel';
import type { PlanStatus } from './PlanStatus';
import {
    PlanStatusFromJSON,
    PlanStatusFromJSONTyped,
    PlanStatusToJSON,
    PlanStatusToJSONTyped,
} from './PlanStatus';

/**
 * Failed server-side planning result
 * @export
 * @interface FailedPlanningResult
 */
export interface FailedPlanningResult {
    /**
     * 
     * @type {ErrorModel}
     * @memberof FailedPlanningResult
     */
    error: ErrorModel;
    /**
     * 
     * @type {PlanStatus}
     * @memberof FailedPlanningResult
     */
    status: PlanStatus;
}



/**
 * Check if a given object implements the FailedPlanningResult interface.
 */
export function instanceOfFailedPlanningResult(value: object): value is FailedPlanningResult {
    if (!('error' in value) || value['error'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function FailedPlanningResultFromJSON(json: any): FailedPlanningResult {
    return FailedPlanningResultFromJSONTyped(json, false);
}

export function FailedPlanningResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): FailedPlanningResult {
    if (json == null) {
        return json;
    }
    return {
        
        'error': ErrorModelFromJSON(json['error']),
        'status': PlanStatusFromJSON(json['status']),
    };
}

export function FailedPlanningResultToJSON(json: any): FailedPlanningResult {
    return FailedPlanningResultToJSONTyped(json, false);
}

export function FailedPlanningResultToJSONTyped(value?: FailedPlanningResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'error': ErrorModelToJSON(value['error']),
        'status': PlanStatusToJSON(value['status']),
    };
}

