/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PrimitiveTypeValue } from './PrimitiveTypeValue';
import {
    PrimitiveTypeValueFromJSON,
    PrimitiveTypeValueFromJSONTyped,
    PrimitiveTypeValueToJSON,
    PrimitiveTypeValueToJSONTyped,
} from './PrimitiveTypeValue';
import type { ContentFile } from './ContentFile';
import {
    ContentFileFromJSON,
    ContentFileFromJSONTyped,
    ContentFileToJSON,
    ContentFileToJSONTyped,
} from './ContentFile';
import type { FileFormat } from './FileFormat';
import {
    FileFormatFromJSON,
    FileFormatFromJSONTyped,
    FileFormatToJSON,
    FileFormatToJSONTyped,
} from './FileFormat';

/**
 * 
 * @export
 * @interface PositionDeleteFile
 */
export interface PositionDeleteFile extends ContentFile {
    /**
     * 
     * @type {string}
     * @memberof PositionDeleteFile
     */
    content: string;
    /**
     * Offset within the delete file of delete content
     * @type {number}
     * @memberof PositionDeleteFile
     */
    contentOffset?: number;
    /**
     * Length, in bytes, of the delete content; required if content-offset is present
     * @type {number}
     * @memberof PositionDeleteFile
     */
    contentSizeInBytes?: number;
}



/**
 * Check if a given object implements the PositionDeleteFile interface.
 */
export function instanceOfPositionDeleteFile(value: object): value is PositionDeleteFile {
    if (!('content' in value) || value['content'] === undefined) return false;
    return true;
}

export function PositionDeleteFileFromJSON(json: any): PositionDeleteFile {
    return PositionDeleteFileFromJSONTyped(json, false);
}

export function PositionDeleteFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): PositionDeleteFile {
    if (json == null) {
        return json;
    }
    return {
        ...ContentFileFromJSONTyped(json, true),
        'content': json['content'],
        'contentOffset': json['content-offset'] == null ? undefined : json['content-offset'],
        'contentSizeInBytes': json['content-size-in-bytes'] == null ? undefined : json['content-size-in-bytes'],
    };
}

export function PositionDeleteFileToJSON(json: any): PositionDeleteFile {
    return PositionDeleteFileToJSONTyped(json, false);
}

export function PositionDeleteFileToJSONTyped(value?: PositionDeleteFile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        ...ContentFileToJSONTyped(value, true),
        'content': value['content'],
        'content-offset': value['contentOffset'],
        'content-size-in-bytes': value['contentSizeInBytes'],
    };
}

