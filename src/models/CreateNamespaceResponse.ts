/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateNamespaceResponse
 */
export interface CreateNamespaceResponse {
    /**
     * Reference to one or more levels of a namespace
     * @type {Array<string>}
     * @memberof CreateNamespaceResponse
     */
    namespace: Array<string>;
    /**
     * Properties stored on the namespace, if supported by the server.
     * @type {{ [key: string]: string; }}
     * @memberof CreateNamespaceResponse
     */
    properties?: { [key: string]: string; };
}

/**
 * Check if a given object implements the CreateNamespaceResponse interface.
 */
export function instanceOfCreateNamespaceResponse(value: object): value is CreateNamespaceResponse {
    if (!('namespace' in value) || value['namespace'] === undefined) return false;
    return true;
}

export function CreateNamespaceResponseFromJSON(json: any): CreateNamespaceResponse {
    return CreateNamespaceResponseFromJSONTyped(json, false);
}

export function CreateNamespaceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateNamespaceResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'namespace': json['namespace'],
        'properties': json['properties'] == null ? undefined : json['properties'],
    };
}

export function CreateNamespaceResponseToJSON(json: any): CreateNamespaceResponse {
    return CreateNamespaceResponseToJSONTyped(json, false);
}

export function CreateNamespaceResponseToJSONTyped(value?: CreateNamespaceResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'namespace': value['namespace'],
        'properties': value['properties'],
    };
}

