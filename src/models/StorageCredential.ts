/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StorageCredential
 */
export interface StorageCredential {
    /**
     * Indicates a storage location prefix where the credential is relevant. Clients should choose the most specific prefix (by selecting the longest prefix) if several credentials of the same type are available.
     * @type {string}
     * @memberof StorageCredential
     */
    prefix: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof StorageCredential
     */
    config: { [key: string]: string; };
}

/**
 * Check if a given object implements the StorageCredential interface.
 */
export function instanceOfStorageCredential(value: object): value is StorageCredential {
    if (!('prefix' in value) || value['prefix'] === undefined) return false;
    if (!('config' in value) || value['config'] === undefined) return false;
    return true;
}

export function StorageCredentialFromJSON(json: any): StorageCredential {
    return StorageCredentialFromJSONTyped(json, false);
}

export function StorageCredentialFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageCredential {
    if (json == null) {
        return json;
    }
    return {
        
        'prefix': json['prefix'],
        'config': json['config'],
    };
}

export function StorageCredentialToJSON(json: any): StorageCredential {
    return StorageCredentialToJSONTyped(json, false);
}

export function StorageCredentialToJSONTyped(value?: StorageCredential | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'prefix': value['prefix'],
        'config': value['config'],
    };
}

