/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Snapshot } from './Snapshot';
import {
    SnapshotFromJSON,
    SnapshotFromJSONTyped,
    SnapshotToJSON,
    SnapshotToJSONTyped,
} from './Snapshot';
import type { BaseUpdate } from './BaseUpdate';
import {
    BaseUpdateFromJSON,
    BaseUpdateFromJSONTyped,
    BaseUpdateToJSON,
    BaseUpdateToJSONTyped,
} from './BaseUpdate';

/**
 * 
 * @export
 * @interface AddSnapshotUpdate
 */
export interface AddSnapshotUpdate extends BaseUpdate {
    /**
     * 
     * @type {string}
     * @memberof AddSnapshotUpdate
     */
    action: string;
    /**
     * 
     * @type {Snapshot}
     * @memberof AddSnapshotUpdate
     */
    snapshot: Snapshot;
}

/**
 * Check if a given object implements the AddSnapshotUpdate interface.
 */
export function instanceOfAddSnapshotUpdate(value: object): value is AddSnapshotUpdate {
    if (!('snapshot' in value) || value['snapshot'] === undefined) return false;
    return true;
}

export function AddSnapshotUpdateFromJSON(json: any): AddSnapshotUpdate {
    return AddSnapshotUpdateFromJSONTyped(json, false);
}

export function AddSnapshotUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddSnapshotUpdate {
    if (json == null) {
        return json;
    }
    return {
        ...BaseUpdateFromJSONTyped(json, true),
        'action': json['action'] == null ? undefined : json['action'],
        'snapshot': SnapshotFromJSON(json['snapshot']),
    };
}

export function AddSnapshotUpdateToJSON(json: any): AddSnapshotUpdate {
    return AddSnapshotUpdateToJSONTyped(json, false);
}

export function AddSnapshotUpdateToJSONTyped(value?: AddSnapshotUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        ...BaseUpdateToJSONTyped(value, true),
        'action': value['action'],
        'snapshot': SnapshotToJSON(value['snapshot']),
    };
}

