/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ListNamespacesResponse
 */
export interface ListNamespacesResponse {
    /**
     * An opaque token that allows clients to make use of pagination for list APIs (e.g. ListTables). Clients may initiate the first paginated request by sending an empty query parameter `pageToken` to the server.
     * Servers that support pagination should identify the `pageToken` parameter and return a `next-page-token` in the response if there are more results available.  After the initial request, the value of `next-page-token` from each response must be used as the `pageToken` parameter value for the next request. The server must return `null` value for the `next-page-token` in the last response.
     * Servers that support pagination must return all results in a single response with the value of `next-page-token` set to `null` if the query parameter `pageToken` is not set in the request.
     * Servers that do not support pagination should ignore the `pageToken` parameter and return all results in a single response. The `next-page-token` must be omitted from the response.
     * Clients must interpret either `null` or missing response value of `next-page-token` as the end of the listing results.
     * @type {string}
     * @memberof ListNamespacesResponse
     */
    nextPageToken?: string;
    /**
     * 
     * @type {Set<Array<string>>}
     * @memberof ListNamespacesResponse
     */
    namespaces?: Set<Array<string>>;
}

/**
 * Check if a given object implements the ListNamespacesResponse interface.
 */
export function instanceOfListNamespacesResponse(value: object): value is ListNamespacesResponse {
    return true;
}

export function ListNamespacesResponseFromJSON(json: any): ListNamespacesResponse {
    return ListNamespacesResponseFromJSONTyped(json, false);
}

export function ListNamespacesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListNamespacesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'nextPageToken': json['next-page-token'] == null ? undefined : json['next-page-token'],
        'namespaces': json['namespaces'] == null ? undefined : new Set(json['namespaces']),
    };
}

export function ListNamespacesResponseToJSON(json: any): ListNamespacesResponse {
    return ListNamespacesResponseToJSONTyped(json, false);
}

export function ListNamespacesResponseToJSONTyped(value?: ListNamespacesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'next-page-token': value['nextPageToken'],
        'namespaces': value['namespaces'] == null ? undefined : Array.from(value['namespaces'] as Set<any>),
    };
}

