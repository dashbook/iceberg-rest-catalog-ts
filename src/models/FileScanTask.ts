/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DataFile } from './DataFile';
import {
    DataFileFromJSON,
    DataFileFromJSONTyped,
    DataFileToJSON,
    DataFileToJSONTyped,
} from './DataFile';
import type { Expression } from './Expression';
import {
    ExpressionFromJSON,
    ExpressionFromJSONTyped,
    ExpressionToJSON,
    ExpressionToJSONTyped,
} from './Expression';

/**
 * 
 * @export
 * @interface FileScanTask
 */
export interface FileScanTask {
    /**
     * 
     * @type {DataFile}
     * @memberof FileScanTask
     */
    dataFile: DataFile;
    /**
     * A list of indices in the delete files array (0-based)
     * @type {Array<number>}
     * @memberof FileScanTask
     */
    deleteFileReferences?: Array<number>;
    /**
     * An optional filter to be applied to rows in this file scan task.
     * If the residual is not present, the client must produce the residual or use the original filter.
     * @type {Expression}
     * @memberof FileScanTask
     */
    residualFilter?: Expression;
}

/**
 * Check if a given object implements the FileScanTask interface.
 */
export function instanceOfFileScanTask(value: object): value is FileScanTask {
    if (!('dataFile' in value) || value['dataFile'] === undefined) return false;
    return true;
}

export function FileScanTaskFromJSON(json: any): FileScanTask {
    return FileScanTaskFromJSONTyped(json, false);
}

export function FileScanTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileScanTask {
    if (json == null) {
        return json;
    }
    return {
        
        'dataFile': DataFileFromJSON(json['data-file']),
        'deleteFileReferences': json['delete-file-references'] == null ? undefined : json['delete-file-references'],
        'residualFilter': json['residual-filter'] == null ? undefined : ExpressionFromJSON(json['residual-filter']),
    };
}

export function FileScanTaskToJSON(json: any): FileScanTask {
    return FileScanTaskToJSONTyped(json, false);
}

export function FileScanTaskToJSONTyped(value?: FileScanTask | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data-file': DataFileToJSON(value['dataFile']),
        'delete-file-references': value['deleteFileReferences'],
        'residual-filter': ExpressionToJSON(value['residualFilter']),
    };
}

