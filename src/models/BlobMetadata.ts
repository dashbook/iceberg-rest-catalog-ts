/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BlobMetadata
 */
export interface BlobMetadata {
    /**
     * 
     * @type {string}
     * @memberof BlobMetadata
     */
    type: string;
    /**
     * 
     * @type {number}
     * @memberof BlobMetadata
     */
    snapshotId: number;
    /**
     * 
     * @type {number}
     * @memberof BlobMetadata
     */
    sequenceNumber: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof BlobMetadata
     */
    fields: Array<number>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof BlobMetadata
     */
    properties?: { [key: string]: string; };
}

/**
 * Check if a given object implements the BlobMetadata interface.
 */
export function instanceOfBlobMetadata(value: object): value is BlobMetadata {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('snapshotId' in value) || value['snapshotId'] === undefined) return false;
    if (!('sequenceNumber' in value) || value['sequenceNumber'] === undefined) return false;
    if (!('fields' in value) || value['fields'] === undefined) return false;
    return true;
}

export function BlobMetadataFromJSON(json: any): BlobMetadata {
    return BlobMetadataFromJSONTyped(json, false);
}

export function BlobMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlobMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'snapshotId': json['snapshot-id'],
        'sequenceNumber': json['sequence-number'],
        'fields': json['fields'],
        'properties': json['properties'] == null ? undefined : json['properties'],
    };
}

export function BlobMetadataToJSON(json: any): BlobMetadata {
    return BlobMetadataToJSONTyped(json, false);
}

export function BlobMetadataToJSONTyped(value?: BlobMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'snapshot-id': value['snapshotId'],
        'sequence-number': value['sequenceNumber'],
        'fields': value['fields'],
        'properties': value['properties'],
    };
}

