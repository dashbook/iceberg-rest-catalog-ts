/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AssertViewUUID } from './AssertViewUUID';
import {
    instanceOfAssertViewUUID,
    AssertViewUUIDFromJSON,
    AssertViewUUIDFromJSONTyped,
    AssertViewUUIDToJSON,
} from './AssertViewUUID';

/**
 * @type ViewRequirement
 * 
 * @export
 */
export type ViewRequirement = { type: 'assert-view-uuid' } & AssertViewUUID;

export function ViewRequirementFromJSON(json: any): ViewRequirement {
    return ViewRequirementFromJSONTyped(json, false);
}

export function ViewRequirementFromJSONTyped(json: any, ignoreDiscriminator: boolean): ViewRequirement {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'assert-view-uuid':
            return Object.assign({}, AssertViewUUIDFromJSONTyped(json, true), { type: 'assert-view-uuid' } as const);
        default:
            throw new Error(`No variant of ViewRequirement exists with 'type=${json['type']}'`);
    }
}

export function ViewRequirementToJSON(json: any): any {
    return ViewRequirementToJSONTyped(json, false);
}

export function ViewRequirementToJSONTyped(value?: ViewRequirement | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'assert-view-uuid':
            return Object.assign({}, AssertViewUUIDToJSON(value), { type: 'assert-view-uuid' } as const);
        default:
            throw new Error(`No variant of ViewRequirement exists with 'type=${value['type']}'`);
    }

}

