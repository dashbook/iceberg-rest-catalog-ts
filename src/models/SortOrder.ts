/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SortField } from './SortField';
import {
    SortFieldFromJSON,
    SortFieldFromJSONTyped,
    SortFieldToJSON,
    SortFieldToJSONTyped,
} from './SortField';

/**
 * 
 * @export
 * @interface SortOrder
 */
export interface SortOrder {
    /**
     * 
     * @type {number}
     * @memberof SortOrder
     */
    readonly orderId: number;
    /**
     * 
     * @type {Array<SortField>}
     * @memberof SortOrder
     */
    fields: Array<SortField>;
}

/**
 * Check if a given object implements the SortOrder interface.
 */
export function instanceOfSortOrder(value: object): value is SortOrder {
    if (!('orderId' in value) || value['orderId'] === undefined) return false;
    if (!('fields' in value) || value['fields'] === undefined) return false;
    return true;
}

export function SortOrderFromJSON(json: any): SortOrder {
    return SortOrderFromJSONTyped(json, false);
}

export function SortOrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): SortOrder {
    if (json == null) {
        return json;
    }
    return {
        
        'orderId': json['order-id'],
        'fields': ((json['fields'] as Array<any>).map(SortFieldFromJSON)),
    };
}

export function SortOrderToJSON(json: any): SortOrder {
    return SortOrderToJSONTyped(json, false);
}

export function SortOrderToJSONTyped(value?: Omit<SortOrder, 'order-id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fields': ((value['fields'] as Array<any>).map(SortFieldToJSON)),
    };
}

