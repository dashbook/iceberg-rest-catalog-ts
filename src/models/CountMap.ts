/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CountMap
 */
export interface CountMap {
    /**
     * List of integer column ids for each corresponding value
     * @type {Array<number>}
     * @memberof CountMap
     */
    keys?: Array<number>;
    /**
     * List of Long values, matched to 'keys' by index
     * @type {Array<number>}
     * @memberof CountMap
     */
    values?: Array<number>;
}

/**
 * Check if a given object implements the CountMap interface.
 */
export function instanceOfCountMap(value: object): value is CountMap {
    return true;
}

export function CountMapFromJSON(json: any): CountMap {
    return CountMapFromJSONTyped(json, false);
}

export function CountMapFromJSONTyped(json: any, ignoreDiscriminator: boolean): CountMap {
    if (json == null) {
        return json;
    }
    return {
        
        'keys': json['keys'] == null ? undefined : json['keys'],
        'values': json['values'] == null ? undefined : json['values'],
    };
}

export function CountMapToJSON(json: any): CountMap {
    return CountMapToJSONTyped(json, false);
}

export function CountMapToJSONTyped(value?: CountMap | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'keys': value['keys'],
        'values': value['values'],
    };
}

