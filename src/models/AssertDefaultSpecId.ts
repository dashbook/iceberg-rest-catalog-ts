/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TableRequirement } from './TableRequirement';
import {
    TableRequirementFromJSON,
    TableRequirementFromJSONTyped,
    TableRequirementToJSON,
    TableRequirementToJSONTyped,
} from './TableRequirement';

/**
 * The table's default spec id must match the requirement's `default-spec-id`
 * @export
 * @interface AssertDefaultSpecId
 */
export interface AssertDefaultSpecId extends TableRequirement {
    /**
     * 
     * @type {string}
     * @memberof AssertDefaultSpecId
     */
    type: string;
    /**
     * 
     * @type {number}
     * @memberof AssertDefaultSpecId
     */
    defaultSpecId: number;
}

/**
 * Check if a given object implements the AssertDefaultSpecId interface.
 */
export function instanceOfAssertDefaultSpecId(value: object): value is AssertDefaultSpecId {
    if (!('defaultSpecId' in value) || value['defaultSpecId'] === undefined) return false;
    return true;
}

export function AssertDefaultSpecIdFromJSON(json: any): AssertDefaultSpecId {
    return AssertDefaultSpecIdFromJSONTyped(json, false);
}

export function AssertDefaultSpecIdFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssertDefaultSpecId {
    if (json == null) {
        return json;
    }
    return {
        ...TableRequirementFromJSONTyped(json, true),
        'type': json['type'] == null ? undefined : json['type'],
        'defaultSpecId': json['default-spec-id'],
    };
}

export function AssertDefaultSpecIdToJSON(json: any): AssertDefaultSpecId {
    return AssertDefaultSpecIdToJSONTyped(json, false);
}

export function AssertDefaultSpecIdToJSONTyped(value?: AssertDefaultSpecId | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        ...TableRequirementToJSONTyped(value, true),
        'type': value['type'],
        'default-spec-id': value['defaultSpecId'],
    };
}

