/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Server-provided configuration for the catalog.
 * @export
 * @interface CatalogConfig
 */
export interface CatalogConfig {
    /**
     * Properties that should be used to override client configuration; applied after defaults and client configuration.
     * @type {{ [key: string]: string; }}
     * @memberof CatalogConfig
     */
    overrides: { [key: string]: string; };
    /**
     * Properties that should be used as default configuration; applied before client configuration.
     * @type {{ [key: string]: string; }}
     * @memberof CatalogConfig
     */
    defaults: { [key: string]: string; };
    /**
     * A list of endpoints that the server supports. The format of each endpoint must be "<HTTP verb> <resource path from OpenAPI REST spec>". The HTTP verb and the resource path must be separated by a space character.
     * @type {Array<string>}
     * @memberof CatalogConfig
     */
    endpoints?: Array<string>;
}

/**
 * Check if a given object implements the CatalogConfig interface.
 */
export function instanceOfCatalogConfig(value: object): value is CatalogConfig {
    if (!('overrides' in value) || value['overrides'] === undefined) return false;
    if (!('defaults' in value) || value['defaults'] === undefined) return false;
    return true;
}

export function CatalogConfigFromJSON(json: any): CatalogConfig {
    return CatalogConfigFromJSONTyped(json, false);
}

export function CatalogConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'overrides': json['overrides'],
        'defaults': json['defaults'],
        'endpoints': json['endpoints'] == null ? undefined : json['endpoints'],
    };
}

export function CatalogConfigToJSON(json: any): CatalogConfig {
    return CatalogConfigToJSONTyped(json, false);
}

export function CatalogConfigToJSONTyped(value?: CatalogConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'overrides': value['overrides'],
        'defaults': value['defaults'],
        'endpoints': value['endpoints'],
    };
}

