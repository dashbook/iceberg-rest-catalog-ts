/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PrimitiveTypeValue } from './PrimitiveTypeValue';
import {
    PrimitiveTypeValueFromJSON,
    PrimitiveTypeValueFromJSONTyped,
    PrimitiveTypeValueToJSON,
    PrimitiveTypeValueToJSONTyped,
} from './PrimitiveTypeValue';
import type { ContentFile } from './ContentFile';
import {
    ContentFileFromJSON,
    ContentFileFromJSONTyped,
    ContentFileToJSON,
    ContentFileToJSONTyped,
} from './ContentFile';
import type { FileFormat } from './FileFormat';
import {
    FileFormatFromJSON,
    FileFormatFromJSONTyped,
    FileFormatToJSON,
    FileFormatToJSONTyped,
} from './FileFormat';

/**
 * 
 * @export
 * @interface EqualityDeleteFile
 */
export interface EqualityDeleteFile extends ContentFile {
    /**
     * 
     * @type {string}
     * @memberof EqualityDeleteFile
     */
    content: string;
    /**
     * List of equality field IDs
     * @type {Array<number>}
     * @memberof EqualityDeleteFile
     */
    equalityIds?: Array<number>;
}



/**
 * Check if a given object implements the EqualityDeleteFile interface.
 */
export function instanceOfEqualityDeleteFile(value: object): value is EqualityDeleteFile {
    if (!('content' in value) || value['content'] === undefined) return false;
    return true;
}

export function EqualityDeleteFileFromJSON(json: any): EqualityDeleteFile {
    return EqualityDeleteFileFromJSONTyped(json, false);
}

export function EqualityDeleteFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): EqualityDeleteFile {
    if (json == null) {
        return json;
    }
    return {
        ...ContentFileFromJSONTyped(json, true),
        'content': json['content'],
        'equalityIds': json['equality-ids'] == null ? undefined : json['equality-ids'],
    };
}

export function EqualityDeleteFileToJSON(json: any): EqualityDeleteFile {
    return EqualityDeleteFileToJSONTyped(json, false);
}

export function EqualityDeleteFileToJSONTyped(value?: EqualityDeleteFile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        ...ContentFileToJSONTyped(value, true),
        'content': value['content'],
        'equality-ids': value['equalityIds'],
    };
}

