/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlanStatus } from './PlanStatus';
import {
    PlanStatusFromJSON,
    PlanStatusFromJSONTyped,
    PlanStatusToJSON,
    PlanStatusToJSONTyped,
} from './PlanStatus';

/**
 * Empty server-side planning result
 * @export
 * @interface EmptyPlanningResult
 */
export interface EmptyPlanningResult {
    /**
     * 
     * @type {PlanStatus}
     * @memberof EmptyPlanningResult
     */
    status: EmptyPlanningResultStatusEnum;
}


/**
 * @export
 */
export const EmptyPlanningResultStatusEnum = {
    Completed: 'completed',
    Submitted: 'submitted',
    Cancelled: 'cancelled',
    Failed: 'failed'
} as const;
export type EmptyPlanningResultStatusEnum = typeof EmptyPlanningResultStatusEnum[keyof typeof EmptyPlanningResultStatusEnum];


/**
 * Check if a given object implements the EmptyPlanningResult interface.
 */
export function instanceOfEmptyPlanningResult(value: object): value is EmptyPlanningResult {
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function EmptyPlanningResultFromJSON(json: any): EmptyPlanningResult {
    return EmptyPlanningResultFromJSONTyped(json, false);
}

export function EmptyPlanningResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmptyPlanningResult {
    if (json == null) {
        return json;
    }
    return {
        
        'status': PlanStatusFromJSON(json['status']),
    };
}

export function EmptyPlanningResultToJSON(json: any): EmptyPlanningResult {
    return EmptyPlanningResultToJSONTyped(json, false);
}

export function EmptyPlanningResultToJSONTyped(value?: EmptyPlanningResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': PlanStatusToJSON(value['status']),
    };
}

