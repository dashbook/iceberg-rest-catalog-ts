/* tslint:disable */
/* eslint-disable */
/**
 * Apache Iceberg REST Catalog API
 * Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Schema } from './Schema';
import {
    SchemaFromJSON,
    SchemaFromJSONTyped,
    SchemaToJSON,
    SchemaToJSONTyped,
} from './Schema';
import type { SortOrder } from './SortOrder';
import {
    SortOrderFromJSON,
    SortOrderFromJSONTyped,
    SortOrderToJSON,
    SortOrderToJSONTyped,
} from './SortOrder';
import type { PartitionSpec } from './PartitionSpec';
import {
    PartitionSpecFromJSON,
    PartitionSpecFromJSONTyped,
    PartitionSpecToJSON,
    PartitionSpecToJSONTyped,
} from './PartitionSpec';

/**
 * 
 * @export
 * @interface CreateTableRequest
 */
export interface CreateTableRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateTableRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateTableRequest
     */
    location?: string;
    /**
     * 
     * @type {Schema}
     * @memberof CreateTableRequest
     */
    schema: Schema;
    /**
     * 
     * @type {PartitionSpec}
     * @memberof CreateTableRequest
     */
    partitionSpec?: PartitionSpec;
    /**
     * 
     * @type {SortOrder}
     * @memberof CreateTableRequest
     */
    writeOrder?: SortOrder;
    /**
     * 
     * @type {boolean}
     * @memberof CreateTableRequest
     */
    stageCreate?: boolean;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof CreateTableRequest
     */
    properties?: { [key: string]: string; };
}

/**
 * Check if a given object implements the CreateTableRequest interface.
 */
export function instanceOfCreateTableRequest(value: object): value is CreateTableRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('schema' in value) || value['schema'] === undefined) return false;
    return true;
}

export function CreateTableRequestFromJSON(json: any): CreateTableRequest {
    return CreateTableRequestFromJSONTyped(json, false);
}

export function CreateTableRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTableRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'location': json['location'] == null ? undefined : json['location'],
        'schema': SchemaFromJSON(json['schema']),
        'partitionSpec': json['partition-spec'] == null ? undefined : PartitionSpecFromJSON(json['partition-spec']),
        'writeOrder': json['write-order'] == null ? undefined : SortOrderFromJSON(json['write-order']),
        'stageCreate': json['stage-create'] == null ? undefined : json['stage-create'],
        'properties': json['properties'] == null ? undefined : json['properties'],
    };
}

export function CreateTableRequestToJSON(json: any): CreateTableRequest {
    return CreateTableRequestToJSONTyped(json, false);
}

export function CreateTableRequestToJSONTyped(value?: CreateTableRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'location': value['location'],
        'schema': SchemaToJSON(value['schema']),
        'partition-spec': PartitionSpecToJSON(value['partitionSpec']),
        'write-order': SortOrderToJSON(value['writeOrder']),
        'stage-create': value['stageCreate'],
        'properties': value['properties'],
    };
}

